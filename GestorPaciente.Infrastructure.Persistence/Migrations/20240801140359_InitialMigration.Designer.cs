// <auto-generated />
using System;
using GestorPaciente.Infrastructure.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestorPaciente.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(GestorPacienteContext))]
    [Migration("20240801140359_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestorPaciente.Core.Domain.Entities.Citas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CausaCita")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CedulaMedico")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("CedulaPaciente")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("FechaCita")
                        .HasColumnType("date");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UltimaFechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CedulaMedico");

                    b.HasIndex("CedulaPaciente");

                    b.ToTable("Citas", (string)null);
                });

            modelBuilder.Entity("GestorPaciente.Core.Domain.Entities.Medicos", b =>
                {
                    b.Property<string>("Cedula")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("FotoMedico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UltimaFechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Cedula");

                    b.ToTable("Medicos", (string)null);
                });

            modelBuilder.Entity("GestorPaciente.Core.Domain.Entities.Pacientes", b =>
                {
                    b.Property<string>("Cedula")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("Alergico")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<string>("FotoPaciente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Fumador")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UltimaFechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Cedula");

                    b.ToTable("Pacientes", (string)null);
                });

            modelBuilder.Entity("GestorPaciente.Core.Domain.Entities.PruebasLaboratorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<DateTime?>("UltimaFechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PruebasLaboratorio", (string)null);
                });

            modelBuilder.Entity("GestorPaciente.Core.Domain.Entities.ResultadosLaboratorio", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CedulaPaciente")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_PruebasLaboratorio")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UltimaFechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CedulaPaciente");

                    b.HasIndex("Id_PruebasLaboratorio")
                        .IsUnique();

                    b.ToTable("ResultadosLaboratorio", (string)null);
                });

            modelBuilder.Entity("GestorPaciente.Core.Domain.Entities.Usuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UltimaFechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("GestorPaciente.Core.Domain.Entities.Citas", b =>
                {
                    b.HasOne("GestorPaciente.Core.Domain.Entities.Medicos", "Medicos")
                        .WithMany("Citas")
                        .HasForeignKey("CedulaMedico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestorPaciente.Core.Domain.Entities.Pacientes", "Pacientes")
                        .WithMany("Citas")
                        .HasForeignKey("CedulaPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicos");

                    b.Navigation("Pacientes");
                });

            modelBuilder.Entity("GestorPaciente.Core.Domain.Entities.ResultadosLaboratorio", b =>
                {
                    b.HasOne("GestorPaciente.Core.Domain.Entities.Pacientes", "Pacientes")
                        .WithMany("ResultadosLaboratorio")
                        .HasForeignKey("CedulaPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestorPaciente.Core.Domain.Entities.PruebasLaboratorio", "PruebasLaboratorio")
                        .WithOne("ResultadosLaboratorio")
                        .HasForeignKey("GestorPaciente.Core.Domain.Entities.ResultadosLaboratorio", "Id_PruebasLaboratorio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pacientes");

                    b.Navigation("PruebasLaboratorio");
                });

            modelBuilder.Entity("GestorPaciente.Core.Domain.Entities.Medicos", b =>
                {
                    b.Navigation("Citas");
                });

            modelBuilder.Entity("GestorPaciente.Core.Domain.Entities.Pacientes", b =>
                {
                    b.Navigation("Citas");

                    b.Navigation("ResultadosLaboratorio");
                });

            modelBuilder.Entity("GestorPaciente.Core.Domain.Entities.PruebasLaboratorio", b =>
                {
                    b.Navigation("ResultadosLaboratorio");
                });
#pragma warning restore 612, 618
        }
    }
}
